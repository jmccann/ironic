[DEFAULT]


[discoverd]

#
# From ironic_discoverd
#

# Keystone authentication endpoint. (string value)
#os_auth_url = http://127.0.0.1:5000/v2.0
os_auth_url = <%= @auth_uri %>

# User name for accessing Keystone and Ironic API. (string value)
#os_username =
os_username = <%= node['openstack']['bare-metal']['service_user'] %>

# Password for accessing Keystone and Ironic API. (string value)
#os_password =
os_password = <%= @service_pass %>

# Tenant name for accessing Keystone and Ironic API. (string value)
#os_tenant_name =
os_tenant_name = <%= node['openstack']['bare-metal']['service_tenant_name'] %>

# Keystone admin endpoint. (string value)
#identity_uri = http://127.0.0.1:35357
identity_uri = <%= @identity_uri %>

# Number of attempts to do when trying to connect to Ironic on start
# up. (integer value)
#ironic_retry_attempts = 5

# Amount of time between attempts to connect to Ironic on start up.
# (integer value)
#ironic_retry_period = 5

# Whether to manage firewall rules for PXE port. (boolean value)
#manage_firewall = true

# Interface on which dnsmasq listens, the default is for VM's. (string
# value)
#dnsmasq_interface = br-ctlplane
dnsmasq_interface = <%= node['ironic']['inspector']['dnsmasq_interface'] %>

# Amount of time in seconds, after which repeat periodic update of
# firewall. (integer value)
#firewall_update_period = 15

# Which MAC addresses to add as ports during introspection. Possible
# values: all (all MAC addresses), active (MAC addresses of NIC with
# IP addresses), pxe (only MAC address of NIC node PXE booted from,
# falls back to "active" if PXE MAC is not supplied by the ramdisk).
# (string value)
# Allowed values: all, active, pxe
#add_ports = pxe
add_ports = <%= node['ironic']['inspector']['add_ports'] %>

# Which ports (already present on a node) to keep after introspection.
# Possible values: all (do not delete anything), present (keep ports
# which MACs were present in introspection data), added (keep only
# MACs that we added during introspection). (string value)
# Allowed values: all, present, added
#keep_ports = all
keep_ports = <%= node['ironic']['inspector']['keep_ports'] %>

# Timeout after which introspection is considered failed, set to 0 to
# disable. (integer value)
#timeout = 3600

# For how much time (in seconds) to keep status information about
# nodes after introspection was finished for them. Default value is 1
# week. (integer value)
#node_status_keep_time = 604800

# Amount of time in seconds, after which repeat clean up of timed out
# nodes and old nodes status information. (integer value)
#clean_up_period = 60

# Whether to overwrite existing values in node database. Disable this
# option to make introspection a non-destructive operation. (boolean
# value)
#overwrite_existing = true

# Whether to enable setting IPMI credentials during introspection.
# This is an experimental and not well tested feature, use at your own
# risk. (boolean value)
#enable_setting_ipmi_credentials = false

# IP to listen on. (string value)
#listen_address = 0.0.0.0

# Port to listen on. (integer value)
#listen_port = 5050

# Whether to authenticate with Keystone on public HTTP endpoints. Note
# that introspection ramdisk postback endpoint is never authenticated.
# (boolean value)
#authenticate = true

# SQLite3 database to store nodes under introspection, required. Do
# not use :memory: here, it won't work. (string value)
#database = /var/lib/ironic-discoverd/discoverd.sqlite
database = <%= node['ironic']['inspector']['sqlite']['path'] %>

# Comma-separated list of enabled hooks for processing pipeline. Hook
# 'scheduler' updates the node with the minimum properties required by
# the Nova scheduler. Hook 'validate_interfaces' ensures that valid
# NIC data was provided by the ramdisk.Do not exclude these two unless
# you really know what you're doing. (string value)
#processing_hooks = ramdisk_error,scheduler,validate_interfaces

# Debug mode enabled/disabled. (boolean value)
#debug = false

# If set, logs from ramdisk will be stored in this directory. (string
# value)
#ramdisk_logs_dir = <None>

# Whether to store ramdisk logs even if it did not return an error
# message (dependent upon "ramdisk_logs_dir" option being set).
# (boolean value)
#always_store_ramdisk_logs = false

# DEPRECATED: use add_ports. (boolean value)
#ports_for_inactive_interfaces = false


[edeploy]

#
# From ironic_discoverd.plugins.edeploy
#

# (string value)
#lockname = /var/lock/discoverd.lock

# (string value)
#configdir = /etc/edeploy
